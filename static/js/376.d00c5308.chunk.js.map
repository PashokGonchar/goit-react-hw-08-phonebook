{"version":3,"file":"static/js/376.d00c5308.chunk.js","mappings":"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","sources":["components/ContactFilters/ContactFilters.styled.js","components/ContactFilters/ContactFilters.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/PhoneBook/PhoneBook.styled.js","components/PhoneBook/PhoneBook.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FilterDiv = styled.div`\nwidth: 182px;\nmargin: 0 auto;\nmargin-bottom: 10px;\n`","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport debounce from 'lodash.debounce';\nimport { TextField } from '@mui/material';\nimport { FilterDiv } from './ContactFilters.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const value = e.target.value;\n    dispatch(setFilter(value));\n  };\n\n  const onFilterChangeDebounced = debounce(onFilterChange, 500);\n\n  return (\n    <FilterDiv>\n      <TextField\n        id=\"search\"\n        name=\"search\"\n        label=\"Find contacts by name\"\n        variant=\"standard\"\n        onChange={onFilterChangeDebounced}\n      />\n    </FilterDiv>\n  );\n};\n\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n justify-content: space-around;\n grid-gap: 10px;\n`;\n\nexport const SubmitButton = styled.button`\n  color: #111827;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-radius: 10px;\n  border: 1px solid #d1d5db;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  cursor: pointer;\n  margin: 0 auto;\nmargin-top: 10px;\n`;\n","import { TextField } from '@mui/material';\nimport Notiflix from 'notiflix';\nimport React  from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form} from './ContactForm.styled';\nimport NavButton from 'components/UsersBar/NavButton/NavButton';\n\n\n\nconst ContactFormPage = () => {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  const handleSubmitForm = data => {\n    const { name, number } = data;\n    const contact = {\n      name,\n      number\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n     Notiflix.Notify.info(`${name} вже існує!`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.number === number)) {\n      Notiflix.Notify.info(`${number} вже є у цьому списку контактів!`);\n      return;\n    }\n    dispatch(addContact(contact))\n  };\n\n  const onFormError = error => {\n  Notiflix.Notify.warning(error);\n}\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset()\n    }\n  },[isSubmitSuccessful, reset])\n  \n  return (\n    <>\n      <Form onSubmit={handleSubmit(handleSubmitForm, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"number\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"number\"\n              error={errors.number && true}\n              helperText={errors.number?.message}\n            />\n          )}\n        />\n        <NavButton type=\"submit\" variant=\"outlined\">\n          Add Contacts\n        </NavButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactFormPage;\n","import styled from \"@emotion/styled\";\nimport { TableCell } from \"@mui/material\";\n\nexport const StyledTableCell = styled(TableCell)`\ncolor: #0000ff;\n`;\n\nexport const ListBtn = styled.button`\n  color: #111827;\n  width: 100px;\n  margin-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-radius: 10px;\n  border: 1px solid #d1d5db;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  cursor: pointer;\n`;","import NavButton from 'components/UsersBar/NavButton/NavButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { StyledTableCell } from './ContactList.styled';\n\nconst ContactListPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const onDelete = ({ id }) => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper} sx={{ maxWidth: '900px' }}>\n        <Table aria-label=\"contacts table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Phone</StyledTableCell>\n              <StyledTableCell align=\"center\">Function</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts.map(({ id, name, number }) => (\n              <TableRow key={id}>\n                <StyledTableCell align=\"center\">{name}</StyledTableCell>\n                <StyledTableCell align=\"center\">{number}</StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <NavButton\n                    variant=\"outlined\"\n                    type=\"button\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => onDelete({ id })}\n                  >\n                    Delete\n                  </NavButton>\n                </StyledTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default ContactListPage;\n","import styled from \"@emotion/styled\";\n\nexport const DivPhoneBookMain = styled.div`\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nwidth: 500px;\nmargin: 0 auto;\npadding-top: 50px;\n`\n\nexport const DivPhoneBook = styled.div`\n  margin: 0 auto;\n  padding-bottom: 20px;\n  padding-top: 20px;\n  size: 10px;\n  font-size: 30px;\n  font-weight: 700;\n  color: #0000ff;\n`;","import Filter from 'components/ContactFilters/ContactFilters';\nimport ContactFormPage from 'components/ContactForm/ContactForm';\nimport ContactListPage from 'components/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\nimport { DivPhoneBook, DivPhoneBookMain } from './PhoneBook.styled';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <DivPhoneBookMain>\n      <DivPhoneBook>Phonebook</DivPhoneBook>\n\n      <ContactFormPage />\n\n      <DivPhoneBook>Contacts</DivPhoneBook>\n\n      <Filter />\n\n      {isLoading && !error && <b>Request in progress ...</b>}\n\n      <ContactListPage />\n    </DivPhoneBookMain>\n  );\n}\n","import PhoneBook from \"components/PhoneBook/PhoneBook\";\n\nexport default function Contacts() {\n  return  <PhoneBook />;\n}\n"],"names":["FilterDiv","styled","dispatch","useDispatch","onFilterChangeDebounced","debounce","e","value","target","setFilter","TextField","id","name","label","variant","onChange","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","toLowerCase","includes","Form","useForm","defaultValues","number","control","handleSubmit","reset","formState","errors","isSubmitSuccessful","useSelector","React","onSubmit","data","contact","some","Notiflix","addContact","render","field","size","helperText","message","type","NavButton","StyledTableCell","TableCell","TableContainer","component","Paper","sx","maxWidth","Table","TableHead","TableRow","align","TableBody","map","startIcon","Delete","onClick","deleteContact","onDelete","DivPhoneBookMain","DivPhoneBook","PhoneBook","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","ContactForm","Contacts"],"sourceRoot":""}