{"version":3,"file":"static/js/995.6d19d5ad.chunk.js","mappings":"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","sources":["components/ContactFilters/ContactFilters.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/PhoneBook/PhoneBook.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport debounce from 'lodash.debounce';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const value = e.target.value;\n    dispatch(setFilter(value));\n  };\n\n  const onFilterChangeDebounced = debounce(onFilterChange, 500);\n\n  return (\n    <TextField\n      id=\"search\"\n      name=\"search\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      onChange={onFilterChangeDebounced}\n    />\n  );\n};\n\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { TextField } from '@mui/material';\nimport Notiflix from 'notiflix';\nimport React  from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\n\nconst ContactFormPage = () => {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  const handleSubmitForm = data => {\n    const { name, number } = data;\n    const contact = {\n      name,\n      number\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n     Notiflix.Notify.info(`${name} вже існує!`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.number === number)) {\n      Notiflix.Notify.info(`${number} вже є у цьому списку контактів!`);\n      return;\n    }\n    dispatch(addContact(contact))\n  };\n\n  const onFormError = error => {\n  Notiflix.Notify.warning(error);\n}\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset()\n    }\n  },[isSubmitSuccessful, reset])\n  \n  return (\n    <>\n      <form onSubmit={handleSubmit(handleSubmitForm, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"number\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.number && true}\n              helperText={errors.number?.message}\n            />\n          )}\n        />\n        <button type=\"submit\" variant=\"outlined\">\n          Add Contacts\n        </button>\n      </form>\n\n      \n    </>\n  );\n};\n\nexport default ContactFormPage;\n","import styled from \"@emotion/styled\";\n\nexport const ListLi = styled.li`\n  display: flex;\n  padding: 5px;\n  margin-bottom: 5px;\n  list-style: circle;\n`;\n\nexport const ListBtn = styled.button`\n  color: #111827;\n  width: 100px;\n  margin-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-radius: 10px;\n  border: 1px solid #d1d5db;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  cursor: pointer;\n`;","import { ListBtn, ListLi } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactListPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const onDelete = ({ id }) => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <ListLi key={id}>\n            {name}:{number}\n            <ListBtn\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => onDelete({id})}\n            >\n              Delete contact\n            </ListBtn>\n          </ListLi>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactListPage;\n","import Filter from 'components/ContactFilters/ContactFilters';\nimport ContactFormPage from 'components/ContactForm/ContactForm';\nimport ContactListPage from 'components/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div>\n      <div>Phonebook</div>\n      <ContactFormPage />\n      <div>Contacts</div>\n      <Filter />\n      {isLoading && !error && <b>Request in progress ...</b>}\n      <ContactListPage />\n    </div>\n  );\n}\n","import PhoneBook from \"components/PhoneBook/PhoneBook\";\n\nexport default function Contacts() {\n  return  <PhoneBook />;\n}\n"],"names":["dispatch","useDispatch","onFilterChangeDebounced","debounce","e","value","target","setFilter","TextField","id","name","label","variant","onChange","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","toLowerCase","includes","useForm","defaultValues","number","control","handleSubmit","reset","formState","errors","isSubmitSuccessful","useSelector","React","onSubmit","data","contact","some","Notiflix","addContact","render","field","size","helperText","message","type","ListLi","styled","ListBtn","map","onClick","deleteContact","onDelete","PhoneBook","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","ContactForm","Contacts"],"sourceRoot":""}